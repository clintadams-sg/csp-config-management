apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend-production
  name: frontend-production
  annotations:
    #configmanagement.gke.io/cluster-selector: gcp-cluster
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: frontend-production
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-production
  annotations:
    configmanagement.gke.io/cluster-selector: gcp-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-production
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend-production
      name: frontend
    spec:
      containers:
      - image: bkauf/gcpdemo
        env:
        - name: CLOUD
          value: "gcp"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
        name: webserver
        ports:
        - containerPort: 8080
          name: frontend
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-production
  annotations:
   # configmanagement.gke.io/cluster-selector: aws-cluster
spec:
  replicas: 10
  selector:
    matchLabels:
      app: frontend-production
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend-production
      name: frontend
    spec:
      containers:
      - image: bkauf/gcpdemo
        env:
        - name: CLOUD
          value: "aws"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
        name: webserver
        ports:
        - containerPort: 8080
          name: frontend
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-production
  annotations:
    configmanagement.gke.io/cluster-selector: azure-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-production
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend-production
      name: frontend
    spec:
      containers:
      #- image: anthos.azurecr.io/gcpdemo:latest
      - image: bkauf/gcpdemo
        env:
        - name: CLOUD
          value: "azure"
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
        name: webserver
        ports:
        - containerPort: 8080
          name: frontend
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 5
      #imagePullSecrets:
        #- name: anthos-acr
        #- name: gcr-json-key

